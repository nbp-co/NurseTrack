// scripts/write-version.js
/* Creates src/build-info.ts with {sha, tag, branch, dirty, builtAt} */
import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

function sh(cmd) {
  try { return execSync(cmd, { encoding: 'utf8' }).trim(); }
  catch { return ''; }
}

const sha = process.env.GIT_SHA || sh('git rev-parse --short=7 HEAD') || 'unknown';
const tag = process.env.GIT_TAG || sh('git describe --tags --abbrev=0') || '';
const branch = process.env.GIT_BRANCH || sh('git rev-parse --abbrev-ref HEAD') || 'unknown';
let dirty = false;
try { execSync('git diff --quiet'); } catch { dirty = true; }

const builtAt = new Date().toISOString();
const out = `
/** Auto-generated by scripts/write-version.js â€” do not edit */
export const BUILD_INFO = {
  sha: ${JSON.stringify(sha)},
  tag: ${JSON.stringify(tag)},
  branch: ${JSON.stringify(branch)},
  dirty: ${JSON.stringify(dirty)},
  builtAt: ${JSON.stringify(builtAt)}
} as const;
`;
const outPath = path.join(process.cwd(), 'client', 'src', 'build-info.ts');
fs.mkdirSync(path.dirname(outPath), { recursive: true });
fs.writeFileSync(outPath, out);
console.log('Wrote', outPath, { sha, tag, branch, dirty, builtAt });